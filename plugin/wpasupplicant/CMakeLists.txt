CMAKE_MINIMUM_REQUIRED(VERSION 2.6)
PROJECT(wifi-direct-plugin-wpasupplicant C)

# Set required packages
INCLUDE(FindPkgConfig)
pkg_check_modules(pkgs REQUIRED wifi-direct glib-2.0 dlog)
FOREACH(flag ${pkgs_CFLAGS})
	SET(EXTRA_CFLAGS "${EXTRA_CFLAGS} ${flag}")
ENDFOREACH(flag)

INCLUDE_DIRECTORIES(${CMAKE_SOURCE_DIR}/oem)

SET(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} ${EXTRA_CFLAGS} -g -Wall")
SET(CMAKE_C_FLAGS_DEBUG "-O0 -g")
SET(CMAKE_C_FLAGS_RELEASE "-O2")

SET(LIBDIR ${LIB_INSTALL_DIR})

ADD_DEFINITIONS("-DPREFIX=\"${PREFIX}\"")
ADD_DEFINITIONS("-DUSE_DLOG")

#EXEC_PROGRAM("${UNAME}" ARGS "-m" OUTPUT_VARIABLE "ARCH")
SET(ARCH "${ARCHITECTURE}")
IF("${ARCH}" MATCHES "^arm.*|.*86.*")

	SET(SRCS 
		wfd-plugin-wpasupplicant.c
		)

	# library build
	ADD_LIBRARY(${PROJECT_NAME} SHARED ${SRCS})
	TARGET_LINK_LIBRARIES(${PROJECT_NAME} ${pkgs_LDFLAGS})
	#SET_TARGET_PROPERTIES(${PROJECT_NAME} PROPERTIES SOVERSION 0.1.0)
	SET_TARGET_PROPERTIES(${PROJECT_NAME} PROPERTIES PREFIX "" OUTPUT_NAME ${PROJECT_NAME})

	# install
	INSTALL(TARGETS ${PROJECT_NAME} LIBRARY DESTINATION ${LIBDIR})

ELSE()

	SET(SRCS 
		wfd-plugin-wpasupplicant-emul.c
		)

	# library build
	ADD_LIBRARY(${PROJECT_NAME} SHARED ${SRCS})
	TARGET_LINK_LIBRARIES(${PROJECT_NAME} ${pkgs_LDFLAGS})
	#SET_TARGET_PROPERTIES(${PROJECT_NAME} PROPERTIES SOVERSION 0.1.0)
	SET_TARGET_PROPERTIES(${PROJECT_NAME} PROPERTIES PREFIX "" OUTPUT_NAME ${PROJECT_NAME})

	# install
	INSTALL(TARGETS ${PROJECT_NAME} LIBRARY DESTINATION lib)

ENDIF()
